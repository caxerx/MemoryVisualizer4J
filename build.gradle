buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '2.9.456'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
    }
}

plugins {
    id 'java'
}

apply plugin: 'cz.habarta.typescript-generator'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "com.moowork.node"

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

group 'com.caxerx'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.openjdk.jol:jol-core:0.9"
    compile 'io.javalin:javalin:3.12.0'
    compile "org.slf4j:slf4j-simple:1.8.0-beta4"

    implementation 'com.google.inject:guice:5.0.0-BETA-1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.google.guava:guava:30.1-jre"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
            'com.caxerx.memoryvisualizer4j.layout.classlayout.*',
            'com.caxerx.memoryvisualizer4j.layout.objectlayout.*',
            'com.caxerx.memoryvisualizer4j.implementation.visualizer.ObjectMapMessage'
    ]
    excludeClasses = [
            "java.io.Serializable"
    ]
    outputFile = 'build/layout.d.ts'
    outputKind = 'global'
    namespace = 'MemoryVisualizer4J'
}

task uiInstall(type: NpmTask) {
    execOverrides {
        it.workingDir = './src-ui'
    }
    args = ['install']
}

task uiBuild(type: NpmTask, dependsOn: 'uiInstall') {
    execOverrides {
        it.workingDir = './src-ui'
    }
    args = ['run', 'build']
}

task buildFullJar {
    dependsOn 'uiBuild'
    dependsOn 'shadowJar'
}